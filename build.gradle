buildscript {
    ext.kotlin_version = '1.0.6'
    ext.spring_version = '1.4.0.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "jacoco"
}

apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/versioning.gradle"

group = 'jalgoarena'
description = """JAlgoArena Submissions"""

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

jar {
    baseName = 'jalgoarena-submissions'
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-databind',
            'com.fasterxml.jackson.core:jackson-core',
            'com.fasterxml.jackson.core:jackson-annotations',
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            'com.squareup.okhttp3:okhttp:3.4.2',
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-actuator",
            'org.springframework.cloud:spring-cloud-starter-eureka',
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            'org.jetbrains.xodus:xodus-openAPI:1.0.2',
            'org.jetbrains.xodus:xodus-entity-store:1.0.2'

    runtime 'ch.qos.logback:logback-classic:1.1.7',
            'ch.qos.logback:logback-core:1.1.7'

    testCompile 'junit:junit:4.12',
            'pl.pragmatists:JUnitParams:1.0.5',
            "com.winterbe:expekt:0.5.0",
            "org.springframework.boot:spring-boot-starter-test"
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

defaultTasks 'clean', 'bootRepackage'

task stage {
    dependsOn 'bootRepackage'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR3"
    }
}

task releaseZip(type: Zip, dependsOn: 'bootRepackage') {
    from('build/libs/') {
        include('*.jar')
    }
    from 'run.sh'
    archiveName "JAlgoArena-Submissions-${version}.zip"
    destinationDir(file('build/libs'))
}
